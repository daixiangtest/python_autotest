{"name": "创建IPFS项目Vue", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Vue' in '获取文本失败'", "trace": "self = <hamster_test.test_cases.test_frontend.test_frontend_ipfs.TestFrontEnd object at 0x0000019BE5BE5730>\ncase = {'case_data': 'FrontEnd_IPFS_Vue_z', 'case_id': 1, 'case_title': ['创建IPFS项目Vue', '检查IPFS项目Vue', '构建IPFS项目Vue', '部署IPFS项目Vue', '删除IPFS项目Vue'], 'text': {'tx1': 'Vue', 'tx2': 'View Full Log', 'tx3': 'Successful', 'tx4': 'Deploy Now', ...}}\nconnect_db = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"53b03fc219623f63f0ab920ecd09970d\")>\n\n    @allure.suite('IPFS生态创建合约')\n    @allure.description(\"IPFS生态创建合约\")\n    @pytest.mark.parametrize('case', cases, ids=ids)\n    def test_create(self, case, connect_db):\n        allure.dynamic.title(case['case_title'][0])\n        allure.attach(get_ini_data('url', 'get_url'), name='请求路径')\n        cp = CreateProject(connect_db)\n        # 登录项目网址\n        cp.geturl(get_ini_data('url', 'get_url'))\n        # 登录项目\n        cp.longin(get_ini_data('github', 'user'), get_ini_data('github', 'passwd'))\n        # 点击创建项目\n        if cp.iselement(5, *em.project_frontend):\n            cp.click(5, *em.create_project)\n        # 打开ipfs合约的展示页面\n        cp.open_frontend_ipfs()\n        # 点击对应的合约\n        cp.click(10, *em.frontend_ipfs[case['case_id'] - 1])\n        # 查看view中的前端模板，并获取里面的文本信息\n        cp.click(10, *em.create_frontend_view)\n        tx1 = cp.get_frontend_view(case['case_id'])\n        time.sleep(3)\n        # 创建前端项目并命名\n        cp.create_by_template(case['case_data'])\n        # 返回到project页面\n        cp.click(30, *em.back_to_project)\n        # 获取文本和URL地址\n        tx2 = cp.find_elements(10, *em.project_contract_names)[0].text\n        url = connect_db.current_url\n        try:\n            assert get_ini_data('url', 'new_url') in url  # 断言URL地址与预期一致\n            assert case['text']['tx1'] in tx1  # 断言文本信息是都存在\n            assert case['case_data'] in tx2\n            logger.info(\"测试编号:{},测试标题:{},执行成功！\".format(case['case_id'], case['case_title'][0]))\n        except AssertionError as e:\n            get_picture(connect_db, case['case_title'][0])  # 失败截图\n            logger.error(\n                \"测试编号:{},测试标题:{},执行失败!实际结果:{}\".format(case['case_id'], case['case_title'][0], e))\n            logger.exception(e)\n>           raise e\n\ntest_cases\\test_frontend\\test_frontend_ipfs.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <hamster_test.test_cases.test_frontend.test_frontend_ipfs.TestFrontEnd object at 0x0000019BE5BE5730>\ncase = {'case_data': 'FrontEnd_IPFS_Vue_z', 'case_id': 1, 'case_title': ['创建IPFS项目Vue', '检查IPFS项目Vue', '构建IPFS项目Vue', '部署IPFS项目Vue', '删除IPFS项目Vue'], 'text': {'tx1': 'Vue', 'tx2': 'View Full Log', 'tx3': 'Successful', 'tx4': 'Deploy Now', ...}}\nconnect_db = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"53b03fc219623f63f0ab920ecd09970d\")>\n\n    @allure.suite('IPFS生态创建合约')\n    @allure.description(\"IPFS生态创建合约\")\n    @pytest.mark.parametrize('case', cases, ids=ids)\n    def test_create(self, case, connect_db):\n        allure.dynamic.title(case['case_title'][0])\n        allure.attach(get_ini_data('url', 'get_url'), name='请求路径')\n        cp = CreateProject(connect_db)\n        # 登录项目网址\n        cp.geturl(get_ini_data('url', 'get_url'))\n        # 登录项目\n        cp.longin(get_ini_data('github', 'user'), get_ini_data('github', 'passwd'))\n        # 点击创建项目\n        if cp.iselement(5, *em.project_frontend):\n            cp.click(5, *em.create_project)\n        # 打开ipfs合约的展示页面\n        cp.open_frontend_ipfs()\n        # 点击对应的合约\n        cp.click(10, *em.frontend_ipfs[case['case_id'] - 1])\n        # 查看view中的前端模板，并获取里面的文本信息\n        cp.click(10, *em.create_frontend_view)\n        tx1 = cp.get_frontend_view(case['case_id'])\n        time.sleep(3)\n        # 创建前端项目并命名\n        cp.create_by_template(case['case_data'])\n        # 返回到project页面\n        cp.click(30, *em.back_to_project)\n        # 获取文本和URL地址\n        tx2 = cp.find_elements(10, *em.project_contract_names)[0].text\n        url = connect_db.current_url\n        try:\n            assert get_ini_data('url', 'new_url') in url  # 断言URL地址与预期一致\n>           assert case['text']['tx1'] in tx1  # 断言文本信息是都存在\nE           AssertionError: assert 'Vue' in '获取文本失败'\n\ntest_cases\\test_frontend\\test_frontend_ipfs.py:52: AssertionError"}, "description": "IPFS生态创建合约", "attachments": [{"name": "请求路径", "source": "8ae5ffea-2efa-4110-9e56-348e43fb6a6e-attachment.attach"}, {"name": "image", "source": "f65ac6b3-d8f7-4873-b2e7-839c41785d03-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "27b0ff35-a839-462f-96f0-6e9eac87b712-attachment.html", "type": "text/html"}, {"name": "longing error", "source": "7fb9f16c-7e42-4699-818f-22a19a13cf88-attachment.txt", "type": "text/plain"}, {"name": "image", "source": "e0c90792-738d-41df-a3a3-0ef484fffe45-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "8a193ab5-809e-483b-940e-ab9a46a1a424-attachment.html", "type": "text/html"}, {"name": "log", "source": "c3622f97-931e-4d48-91c0-c10f6e7366cc-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 1, 'case_title': ['创建IPFS项目Vue', '检查IPFS项目Vue', '构建IPFS项目Vue', '部署IPFS项目Vue', '删除IPFS项目Vue'], 'case_data': 'FrontEnd_IPFS_Vue_z', 'text': {'tx1': 'Vue', 'tx2': 'View Full Log', 'tx3': 'Successful', 'tx4': 'Deploy Now', 'tx5': 'Vue'}}"}], "start": 1692278334067, "stop": 1692278372773, "uuid": "5c43aa23-69e0-4d12-b8ed-e4cf01fab19f", "historyId": "932036855fbfc870d7e459e234062bcb", "testCaseId": "2a9faae9912265c9bab154c19b51c663", "fullName": "test_cases.test_frontend.test_frontend_ipfs.TestFrontEnd#test_create", "labels": [{"name": "feature", "value": "FrontEnd项目合约"}, {"name": "parentSuite", "value": "FrontEnd项目合约"}, {"name": "suite", "value": "IPFS生态创建合约"}, {"name": "epic", "value": "hamster系统"}, {"name": "subSuite", "value": "TestFrontEnd"}, {"name": "host", "value": "LAPTOP-UIN85NG6"}, {"name": "thread", "value": "13272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_frontend.test_frontend_ipfs"}]}