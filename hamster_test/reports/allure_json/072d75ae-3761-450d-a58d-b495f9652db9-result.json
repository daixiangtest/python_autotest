{"name": "部署项目sui_games", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Modules' in 'Projects\\nMiddleware\\nDocs\\nEthereum Mainnet\\n0x156...e010\\nProjects/Contract_sui_games_z/Deploy\\nContract\\nVersion\\n1\\nName\\nGames\\nNetwork / Chain\\nChain\\nSui\\nNetwork\\nTestnet\\nDeploy'", "trace": "self = <hamster_test.test_cases.test_contract.test_contract_sui.TestSui object at 0x0000019BE5B30F70>\ncase = {'case_data': 'Contract_sui_games_z', 'case_id': 3, 'case_title': ['创建项目sui_games', '检查项目sui_games', '构建项目sui_games', ..., '删除项目sui_games'], 'text': {'tx1': 'View Full Log', 'tx2': 'Successful', 'tx3': 'Download ABI', 'tx4': 'Deploy', ...}}\nconnect_db = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fca6a65038d3bda10b4b66b32a901127\")>\n\n    @allure.suite('sui生态部署合约')\n    @allure.description(\"sui生态部署合约\")\n    @pytest.mark.parametrize('case', cases, ids=ids3)\n    def test_deploy(self, case, connect_db):\n        allure.dynamic.title(case['case_title'][3])\n        allure.attach(body=get_ini_data('url', 'get_url'), name='请求路径')\n        cp = CreateProject(connect_db)\n        cp.geturl(get_ini_data('url', 'get_url'))  # 输入项目地址\n        cp.driver.implicitly_wait(15)\n        lens = len(get_yaml_data(DATA_SUI))\n        # 登录项目\n        cp.longin(get_ini_data('github', 'user'), get_ini_data('github', 'passwd'))\n        # 点击项目详情按钮\n        cp.contract_projects(case['case_data'], lens)\n        # 点击deploy按钮\n        cp.click(10, *em.projects_deploy)\n        # 选择部署的网络\n        cp.deploy_evm(1, 2)\n        time.sleep(3)\n        # 操作钱包交易\n        windows = connect_db.window_handles\n        print(windows)\n        # 判断弹窗有没有成功开启\n        if len(windows) == 1:\n            print(\"选择的网络错误\")\n            get_picture(connect_db, case['case_title'][3])  # 失败截图\n            logger.error(\"测试编号:{},测试标题:{},执行失败!实际结果:{}\".format(case['case_id'], case['case_title'][3],\n                                                                               \"请手动切换网络\"))\n            raise Exception\n        cp.window(1)\n        cp.send_keys(10, *em.sui_password, \"Dx3826729\")\n        cp.click(10, *em.sui_unlock)\n        cp.clicks(20, *em.sui_approve)\n        time.sleep(15)\n        cp.window(-1)\n        tx = cp.text(20, *em.ops_projects)\n        new_url = connect_db.current_url\n    \n        try:\n            assert case['text']['tx5'] in tx\n            assert get_ini_data('url', 'new_url') in new_url\n            logger.info(\"测试编号:{},测试标题:{},执行成功！\".format(case['case_id'], case['case_title'][3]))\n        except AssertionError as e:\n            get_picture(connect_db, case['case_title'][3])  # 失败截图\n            logger.error(\n                \"测试编号:{},测试标题:{},执行失败!实际结果:{}\".format(case['case_id'], case['case_title'][3], e))\n            logger.exception(e)\n>           raise e\n\ntest_cases\\test_contract\\test_contract_sui.py:193: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <hamster_test.test_cases.test_contract.test_contract_sui.TestSui object at 0x0000019BE5B30F70>\ncase = {'case_data': 'Contract_sui_games_z', 'case_id': 3, 'case_title': ['创建项目sui_games', '检查项目sui_games', '构建项目sui_games', ..., '删除项目sui_games'], 'text': {'tx1': 'View Full Log', 'tx2': 'Successful', 'tx3': 'Download ABI', 'tx4': 'Deploy', ...}}\nconnect_db = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fca6a65038d3bda10b4b66b32a901127\")>\n\n    @allure.suite('sui生态部署合约')\n    @allure.description(\"sui生态部署合约\")\n    @pytest.mark.parametrize('case', cases, ids=ids3)\n    def test_deploy(self, case, connect_db):\n        allure.dynamic.title(case['case_title'][3])\n        allure.attach(body=get_ini_data('url', 'get_url'), name='请求路径')\n        cp = CreateProject(connect_db)\n        cp.geturl(get_ini_data('url', 'get_url'))  # 输入项目地址\n        cp.driver.implicitly_wait(15)\n        lens = len(get_yaml_data(DATA_SUI))\n        # 登录项目\n        cp.longin(get_ini_data('github', 'user'), get_ini_data('github', 'passwd'))\n        # 点击项目详情按钮\n        cp.contract_projects(case['case_data'], lens)\n        # 点击deploy按钮\n        cp.click(10, *em.projects_deploy)\n        # 选择部署的网络\n        cp.deploy_evm(1, 2)\n        time.sleep(3)\n        # 操作钱包交易\n        windows = connect_db.window_handles\n        print(windows)\n        # 判断弹窗有没有成功开启\n        if len(windows) == 1:\n            print(\"选择的网络错误\")\n            get_picture(connect_db, case['case_title'][3])  # 失败截图\n            logger.error(\"测试编号:{},测试标题:{},执行失败!实际结果:{}\".format(case['case_id'], case['case_title'][3],\n                                                                               \"请手动切换网络\"))\n            raise Exception\n        cp.window(1)\n        cp.send_keys(10, *em.sui_password, \"Dx3826729\")\n        cp.click(10, *em.sui_unlock)\n        cp.clicks(20, *em.sui_approve)\n        time.sleep(15)\n        cp.window(-1)\n        tx = cp.text(20, *em.ops_projects)\n        new_url = connect_db.current_url\n    \n        try:\n>           assert case['text']['tx5'] in tx\nE           AssertionError: assert 'Modules' in 'Projects\\nMiddleware\\nDocs\\nEthereum Mainnet\\n0x156...e010\\nProjects/Contract_sui_games_z/Deploy\\nContract\\nVersion\\n1\\nName\\nGames\\nNetwork / Chain\\nChain\\nSui\\nNetwork\\nTestnet\\nDeploy'\n\ntest_cases\\test_contract\\test_contract_sui.py:185: AssertionError"}, "description": "sui生态部署合约", "attachments": [{"name": "请求路径", "source": "80007dad-6d9e-4ff6-afa4-f0b05b7c1ae8-attachment.attach"}, {"name": "image", "source": "5e66ce64-49fc-4fce-8ed8-6f754d6947cb-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "33bab67a-5084-4160-b706-3c27aeb0d755-attachment.html", "type": "text/html"}, {"name": "log", "source": "1e993c9e-4a5a-4589-958f-e8f37491a3b8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 3, 'case_title': ['创建项目sui_games', '检查项目sui_games', '构建项目sui_games', '部署项目sui_games', '删除项目sui_games'], 'case_data': 'Contract_sui_games_z', 'text': {'tx1': 'View Full Log', 'tx2': 'Successful', 'tx3': 'Download ABI', 'tx4': 'Deploy', 'tx5': 'Modules'}}"}], "start": 1692277013287, "stop": 1692277057758, "uuid": "cd5441ab-8e63-4ca7-8713-9a67cd9f18e7", "historyId": "2659395f660b0222772cead053f957b5", "testCaseId": "204b7b622bde8d95b1077eed323579bc", "fullName": "test_cases.test_contract.test_contract_sui.TestSui#test_deploy", "labels": [{"name": "parentSuite", "value": "sui项目合约"}, {"name": "feature", "value": "sui项目合约"}, {"name": "suite", "value": "sui生态部署合约"}, {"name": "epic", "value": "hamster系统"}, {"name": "subSuite", "value": "TestSui"}, {"name": "host", "value": "LAPTOP-UIN85NG6"}, {"name": "thread", "value": "13272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_contract.test_contract_sui"}]}