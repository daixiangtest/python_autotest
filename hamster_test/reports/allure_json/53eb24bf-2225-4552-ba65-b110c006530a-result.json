{"name": "部署Container项目React", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0069A813+48355]\n\t(No symbol) [0x0062C4B1]\n\t(No symbol) [0x00535358]\n\t(No symbol) [0x005609A5]\n\t(No symbol) [0x00560B3B]\n\t(No symbol) [0x0058E232]\n\t(No symbol) [0x0057A784]\n\t(No symbol) [0x0058C922]\n\t(No symbol) [0x0057A536]\n\t(No symbol) [0x005582DC]\n\t(No symbol) [0x005593DD]\n\tGetHandleVerifier [0x008FAABD+2539405]\n\tGetHandleVerifier [0x0093A78F+2800735]\n\tGetHandleVerifier [0x0093456C+2775612]\n\tGetHandleVerifier [0x007251E0+616112]\n\t(No symbol) [0x00635F8C]\n\t(No symbol) [0x00632328]\n\t(No symbol) [0x0063240B]\n\t(No symbol) [0x00624FF7]\n\tBaseThreadInitThunk [0x766E7D59+25]\n\tRtlInitializeExceptionChain [0x7771B79B+107]\n\tRtlClearBits [0x7771B71F+191]", "trace": "self = <hamster_test.test_cases.test_frontend.test_frontend_container.TestFrontEnd object at 0x0000019BE5C05430>\ncase = {'case_data': 'FrontEnd_Container_React_z', 'case_id': 2, 'case_title': ['创建Container项目React', '检查Container项目React', '...项目React', '删除Container项目React'], 'text': {'tx1': 'React', 'tx2': 'Full Log', 'tx3': 'Successful', 'tx4': 'Deploy Now'}}\nconnect_db = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8d286a0706ee09039ce5999dd391723\")>\n\n    @allure.suite('Container生态部署合约')\n    @allure.description(\"Container生态部署合约\")\n    @pytest.mark.parametrize('case', cases, ids=ids3)\n    def test_deploy(self, case, connect_db):\n        allure.dynamic.title(case['case_title'][3])\n        allure.attach(body=get_ini_data('url', 'get_url'), name='请求路径')\n        cp = CreateProject(connect_db)\n        cp.geturl(get_ini_data('url', 'get_url'))  # 输入项目地址\n        lens = len(get_yaml_data(DATA_CONTAINER))\n        # 登录项目\n        cp.longin(get_ini_data('github', 'user'), get_ini_data('github', 'passwd'))\n        cp.click(10, *em.project_frontend)\n        # 点击项目详情按钮\n        cp.frontend_projects(case['case_data'], lens)\n        # 点击项目deploy按钮\n        cp.clicks(10, *em.projects_deploy)\n        # 填写弹窗信息并提交\n        if case['case_id'] <= 2:\n            cp.frontend_deploy_page(80)\n        else:\n            cp.frontend_deploy_page(3000)\n        # 等待deploy成功\n        cp.wait_recent(100, *em.projects_recent_deploy)\n        # 点击view打开ops页面\n        cp.clicks(10, *em.projects_view_frontend)\n        # 获取ops页面的文本信息\n    \n>       tx1 = cp.text(10, *em.frontend_ops_status)\n\ntest_cases\\test_frontend\\test_frontend_container.py:165: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncomms\\hamster\\opject.py:163: in text\n    raise e\ncomms\\hamster\\opject.py:155: in text\n    el = WebDriverWait(self.driver, time).until(ec.visibility_of_element_located((path, element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a8d286a0706ee09039ce5999dd391723\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000019BE84AC0D0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0069A813+48355]\nE       \t(No symbol) [0x0062C4B1]\nE       \t(No symbol) [0x00535358]\nE       \t(No symbol) [0x005609A5]\nE       \t(No symbol) [0x00560B3B]\nE       \t(No symbol) [0x0058E232]\nE       \t(No symbol) [0x0057A784]\nE       \t(No symbol) [0x0058C922]\nE       \t(No symbol) [0x0057A536]\nE       \t(No symbol) [0x005582DC]\nE       \t(No symbol) [0x005593DD]\nE       \tGetHandleVerifier [0x008FAABD+2539405]\nE       \tGetHandleVerifier [0x0093A78F+2800735]\nE       \tGetHandleVerifier [0x0093456C+2775612]\nE       \tGetHandleVerifier [0x007251E0+616112]\nE       \t(No symbol) [0x00635F8C]\nE       \t(No symbol) [0x00632328]\nE       \t(No symbol) [0x0063240B]\nE       \t(No symbol) [0x00624FF7]\nE       \tBaseThreadInitThunk [0x766E7D59+25]\nE       \tRtlInitializeExceptionChain [0x7771B79B+107]\nE       \tRtlClearBits [0x7771B71F+191]\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python39\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "description": "Container生态部署合约", "attachments": [{"name": "请求路径", "source": "8a424145-d3e9-4a0b-b294-5ac3674624df-attachment.attach"}, {"name": "image", "source": "1ec94ddd-d50d-4798-9374-83d9643931b4-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "341fc059-a23d-42d4-ad3d-b0bcb4c2a848-attachment.html", "type": "text/html"}, {"name": "longing error", "source": "36077fa0-bee7-4697-85a2-48df852fb339-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "08650c7b-0e9f-41d2-8f46-0eab701aa0cf-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 2, 'case_title': ['创建Container项目React', '检查Container项目React', '构建Container项目React', '部署Container项目React', '删除Container项目React'], 'case_data': 'FrontEnd_Container_React_z', 'text': {'tx1': 'React', 'tx2': 'Full Log', 'tx3': 'Successful', 'tx4': 'Deploy Now'}}"}], "start": 1692280325746, "stop": 1692280351476, "uuid": "3b6fd525-36b8-449b-aced-9f86c08de7fe", "historyId": "adcec065335d49be87ab32e453d87376", "testCaseId": "ac3b5201589a3dbb90e3ac541190eeae", "fullName": "test_cases.test_frontend.test_frontend_container.TestFrontEnd#test_deploy", "labels": [{"name": "feature", "value": "FrontEnd项目合约"}, {"name": "parentSuite", "value": "FrontEnd项目合约"}, {"name": "suite", "value": "Container生态部署合约"}, {"name": "epic", "value": "hamster系统"}, {"name": "subSuite", "value": "TestFrontEnd"}, {"name": "host", "value": "LAPTOP-UIN85NG6"}, {"name": "thread", "value": "13272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_frontend.test_frontend_container"}]}