{"name": "部署项目aptos_NFT_marketplace", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'verify' in 'Projects\\nMiddleware\\nDocs\\nEthereum Mainnet\\n0x156...e010\\nProjects/Contract_aptos_NFT_marketplace_z/Dashboard\\n1\\nmarketplace\\nNetwork Address Action\\nTestnet 0x5fb889ec5490c7660d90fe48fe06f5e5e3a367dd0b650b62e6e54123e84f4b06 Deploy\\nContract List\\nSend\\nbuy_token\\ncreate_market\\nlist_token\\nCall\\nBuyTokenEvent\\nCreateMarketEvent\\nListTokenEvent\\nMarket\\nMarketEvents\\nMarketId\\nOffer\\nOfferStore\\nbuy_token\\nparam1\\nparam2\\nparam3\\nparam4\\nparam5\\nparam6\\nparam7\\nparam8\\nTransact\\noutputs\\ncopy'", "trace": "self = <hamster_test.test_cases.test_contract.test_contract_aptos.TestAptos object at 0x0000019BE5B5FD00>\ncase = {'case_data': 'Contract_aptos_NFT_marketplace_z', 'case_id': 6, 'case_title': ['创建项目aptos_NFT_marketplace', '检查项目aptos..._NFT_marketplace'], 'text': {'tx1': 'View Full Log', 'tx2': 'Successful', 'tx3': 'Deploy', 'tx4': 'Download ABI', ...}}\nconnect_db = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"507fe95c7fed5610961761207175587e\")>\n\n    @allure.suite('Aptos生态部署合约')\n    @allure.description(\"Aptos生态部署合约\")\n    @pytest.mark.parametrize('case', cases, ids=ids3)\n    def test_deploy(self, case, connect_db):\n        allure.dynamic.title(case['case_title'][3])\n        allure.attach(body=get_ini_data('url', 'get_url'), name='请求路径')\n        cp = CreateProject(connect_db)\n        cp.geturl(get_ini_data('url', 'get_url'))  # 输入项目地址\n    \n        lens = len(get_yaml_data(DATA_APTOS))\n        # 登录项目\n        cp.longin(get_ini_data('github', 'user'), get_ini_data('github', 'passwd'))\n        # 点击项目详情按钮\n        cp.contract_projects(case['case_data'], lens)\n        # 点击deploy按钮\n        cp.click(10, *em.projects_deploy)\n        # 选择部署的网络\n        cp.deploy_evm(1, 2)\n        time.sleep(5)\n        # 操作钱包交易\n        cp.window(1)\n        cp.send_keys(10, *em.aptos_password, 'Dx3826729')\n        cp.click(10, *em.aptos_unlock)\n        cp.clicks(15, *em.aptos_approve)\n        cp.driver.implicitly_wait(20)\n        time.sleep(20)\n        cp.window(-1)\n        tx = cp.text(20, *em.ops_projects)\n        new_url = connect_db.current_url\n        print(tx)\n        try:\n            assert case['text']['tx5'] in tx\n            assert case['text']['tx6'] in tx\n            assert get_ini_data('url', 'new_url') in new_url\n            logger.info(\"测试编号:{},测试标题:{},执行成功！\".format(case['case_id'], case['case_title'][3]))\n        except AssertionError as e:\n            get_picture(connect_db, case['case_title'][3])  # 失败截图\n            logger.error(\"测试编号:{},测试标题:{},执行失败!实际结果:{}\".format(case['case_id'], case['case_title'], e))\n            logger.exception(e)\n>           raise e\n\ntest_cases\\test_contract\\test_contract_aptos.py:184: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <hamster_test.test_cases.test_contract.test_contract_aptos.TestAptos object at 0x0000019BE5B5FD00>\ncase = {'case_data': 'Contract_aptos_NFT_marketplace_z', 'case_id': 6, 'case_title': ['创建项目aptos_NFT_marketplace', '检查项目aptos..._NFT_marketplace'], 'text': {'tx1': 'View Full Log', 'tx2': 'Successful', 'tx3': 'Deploy', 'tx4': 'Download ABI', ...}}\nconnect_db = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"507fe95c7fed5610961761207175587e\")>\n\n    @allure.suite('Aptos生态部署合约')\n    @allure.description(\"Aptos生态部署合约\")\n    @pytest.mark.parametrize('case', cases, ids=ids3)\n    def test_deploy(self, case, connect_db):\n        allure.dynamic.title(case['case_title'][3])\n        allure.attach(body=get_ini_data('url', 'get_url'), name='请求路径')\n        cp = CreateProject(connect_db)\n        cp.geturl(get_ini_data('url', 'get_url'))  # 输入项目地址\n    \n        lens = len(get_yaml_data(DATA_APTOS))\n        # 登录项目\n        cp.longin(get_ini_data('github', 'user'), get_ini_data('github', 'passwd'))\n        # 点击项目详情按钮\n        cp.contract_projects(case['case_data'], lens)\n        # 点击deploy按钮\n        cp.click(10, *em.projects_deploy)\n        # 选择部署的网络\n        cp.deploy_evm(1, 2)\n        time.sleep(5)\n        # 操作钱包交易\n        cp.window(1)\n        cp.send_keys(10, *em.aptos_password, 'Dx3826729')\n        cp.click(10, *em.aptos_unlock)\n        cp.clicks(15, *em.aptos_approve)\n        cp.driver.implicitly_wait(20)\n        time.sleep(20)\n        cp.window(-1)\n        tx = cp.text(20, *em.ops_projects)\n        new_url = connect_db.current_url\n        print(tx)\n        try:\n            assert case['text']['tx5'] in tx\n>           assert case['text']['tx6'] in tx\nE           AssertionError: assert 'verify' in 'Projects\\nMiddleware\\nDocs\\nEthereum Mainnet\\n0x156...e010\\nProjects/Contract_aptos_NFT_marketplace_z/Dashboard\\n1\\nmarketplace\\nNetwork Address Action\\nTestnet 0x5fb889ec5490c7660d90fe48fe06f5e5e3a367dd0b650b62e6e54123e84f4b06 Deploy\\nContract List\\nSend\\nbuy_token\\ncreate_market\\nlist_token\\nCall\\nBuyTokenEvent\\nCreateMarketEvent\\nListTokenEvent\\nMarket\\nMarketEvents\\nMarketId\\nOffer\\nOfferStore\\nbuy_token\\nparam1\\nparam2\\nparam3\\nparam4\\nparam5\\nparam6\\nparam7\\nparam8\\nTransact\\noutputs\\ncopy'\n\ntest_cases\\test_contract\\test_contract_aptos.py:177: AssertionError"}, "description": "Aptos生态部署合约", "attachments": [{"name": "请求路径", "source": "df6ca912-0bb2-42a5-8598-dec184462744-attachment.attach"}, {"name": "image", "source": "ddabaca5-caab-4966-a9e0-a7bcc773fc91-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "9c25dc3f-2836-4be4-a1c7-3b55bd45c072-attachment.html", "type": "text/html"}, {"name": "log", "source": "a91ee094-443d-4a73-b8af-abd3b3fcbaad-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 6, 'case_title': ['创建项目aptos_NFT_marketplace', '检查项目aptos_NFT_marketplace', '构建项目aptos_NFT_marketplace', '部署项目aptos_NFT_marketplace', '删除项目aptos_NFT_marketplace'], 'case_data': 'Contract_aptos_NFT_marketplace_z', 'text': {'tx1': 'View Full Log', 'tx2': 'Successful', 'tx3': 'Deploy', 'tx4': 'Download ABI', 'tx5': 'Send', 'tx6': 'verify'}}"}], "start": 1692275322313, "stop": 1692275360577, "uuid": "a8165dbd-68b5-4c78-884f-6eea00bab1a7", "historyId": "5d6eb159f85c8503aa38b7cb60e0d243", "testCaseId": "088a921f5be2088aced10166d3bc7608", "fullName": "test_cases.test_contract.test_contract_aptos.TestAptos#test_deploy", "labels": [{"name": "suite", "value": "Aptos生态部署合约"}, {"name": "parentSuite", "value": "Aptos项目合约"}, {"name": "feature", "value": "Aptos项目合约"}, {"name": "epic", "value": "hamster系统"}, {"name": "subSuite", "value": "TestAptos"}, {"name": "host", "value": "LAPTOP-UIN85NG6"}, {"name": "thread", "value": "13272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_contract.test_contract_aptos"}]}