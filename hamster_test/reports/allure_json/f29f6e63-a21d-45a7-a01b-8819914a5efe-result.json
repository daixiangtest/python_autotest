{"name": "创建项目starknet_erc721", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0069A813+48355]\n\t(No symbol) [0x0062C4B1]\n\t(No symbol) [0x00535358]\n\t(No symbol) [0x005609A5]\n\t(No symbol) [0x00560B3B]\n\t(No symbol) [0x0058E232]\n\t(No symbol) [0x0057A784]\n\t(No symbol) [0x0058C922]\n\t(No symbol) [0x0057A536]\n\t(No symbol) [0x005582DC]\n\t(No symbol) [0x005593DD]\n\tGetHandleVerifier [0x008FAABD+2539405]\n\tGetHandleVerifier [0x0093A78F+2800735]\n\tGetHandleVerifier [0x0093456C+2775612]\n\tGetHandleVerifier [0x007251E0+616112]\n\t(No symbol) [0x00635F8C]\n\t(No symbol) [0x00632328]\n\t(No symbol) [0x0063240B]\n\t(No symbol) [0x00624FF7]\n\tBaseThreadInitThunk [0x766E7D59+25]\n\tRtlInitializeExceptionChain [0x7771B79B+107]\n\tRtlClearBits [0x7771B71F+191]", "trace": "self = <hamster_test.test_cases.test_contract.test_contract_starknet.TestStarknet object at 0x0000019BE5BBEF10>\ncase = {'case_data': 'Contract_starknet_erc721_z', 'case_id': 1, 'case_title': ['创建项目starknet_erc721', '检查项目starknet_erc721',...目starknet_erc721'], 'text': {'tx1': 'View Full Log', 'tx2': 'Successful', 'tx3': 'Download ABI', 'tx4': 'Deploy', ...}}\nconnect_db = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"711f5f943064cb6bd027260b8dc1b6a4\")>\n\n    @allure.suite('starknet生态创建合约')\n    @allure.description(\"starknet生态创建合约\")\n    @pytest.mark.parametrize('case', cases, ids=ids)\n    def test_create(self, case, connect_db):\n        allure.dynamic.title(case['case_title'][0])\n        allure.attach(body=get_ini_data('url', 'get_url'), name='请求路径')\n        cp = CreateProject(connect_db)\n        # 登录项目网址\n        cp.geturl(get_ini_data('url', 'get_url'))\n        # 登录项目\n        cp.longin(get_ini_data('github', 'user'), get_ini_data('github', 'passwd'))\n        # 点击创建项目\n        if cp.iselement(5, *em.project_frontend):\n            cp.click(5, *em.create_project)\n        # 打开ipfs合约的展示页面\n        cp.open_starknet()\n        # 点击对应的合约\n        cp.find_elements(10, *em.contract_nfts)[case['case_id'] - 1].click()\n        # 创建前端项目并命名\n        cp.create_by_template(case['case_data'])\n        # 返回到project页面\n>       cp.click(90, *em.back_to_project)\n\ntest_cases\\test_contract\\test_contract_starknet.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncomms\\hamster\\opject.py:90: in click\n    raise e\ncomms\\hamster\\opject.py:83: in click\n    el = WebDriverWait(self.driver, time).until(ec.visibility_of_element_located((path, element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"711f5f943064cb6bd027260b8dc1b6a4\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000019BE84C44C0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0069A813+48355]\nE       \t(No symbol) [0x0062C4B1]\nE       \t(No symbol) [0x00535358]\nE       \t(No symbol) [0x005609A5]\nE       \t(No symbol) [0x00560B3B]\nE       \t(No symbol) [0x0058E232]\nE       \t(No symbol) [0x0057A784]\nE       \t(No symbol) [0x0058C922]\nE       \t(No symbol) [0x0057A536]\nE       \t(No symbol) [0x005582DC]\nE       \t(No symbol) [0x005593DD]\nE       \tGetHandleVerifier [0x008FAABD+2539405]\nE       \tGetHandleVerifier [0x0093A78F+2800735]\nE       \tGetHandleVerifier [0x0093456C+2775612]\nE       \tGetHandleVerifier [0x007251E0+616112]\nE       \t(No symbol) [0x00635F8C]\nE       \t(No symbol) [0x00632328]\nE       \t(No symbol) [0x0063240B]\nE       \t(No symbol) [0x00624FF7]\nE       \tBaseThreadInitThunk [0x766E7D59+25]\nE       \tRtlInitializeExceptionChain [0x7771B79B+107]\nE       \tRtlClearBits [0x7771B71F+191]\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python39\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "description": "starknet生态创建合约", "attachments": [{"name": "请求路径", "source": "ab2e1ee3-10a4-4deb-84e8-aaef51a8d7ed-attachment.attach"}, {"name": "image", "source": "baa087f4-8a6d-41b1-999d-b5e8d7a3f459-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "cd569e07-d871-4bee-be7a-0522fbe9f249-attachment.html", "type": "text/html"}, {"name": "longing error", "source": "dedc8ef5-63ca-46ef-bb7b-2a6902a9e937-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "69c0e2ed-50c5-45d2-870a-018a70d87007-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 1, 'case_title': ['创建项目starknet_erc721', '检查项目starknet_erc721', '构建项目starknet_erc721', '部署项目starknet_erc721', '删除项目starknet_erc721'], 'case_data': 'Contract_starknet_erc721_z', 'text': {'tx1': 'View Full Log', 'tx2': 'Successful', 'tx3': 'Download ABI', 'tx4': 'Deploy', 'tx5': 'Modules'}}"}], "start": 1692277381714, "stop": 1692277482468, "uuid": "eba58069-4b5a-45a3-b056-bb682bc97767", "historyId": "d8ba1bd249fbde0c4abd9777b67e05cd", "testCaseId": "ba863069ec48aada9840ccc5ee863979", "fullName": "test_cases.test_contract.test_contract_starknet.TestStarknet#test_create", "labels": [{"name": "parentSuite", "value": "starknet项目合约"}, {"name": "suite", "value": "starknet生态创建合约"}, {"name": "feature", "value": "starknet项目合约"}, {"name": "epic", "value": "hamster系统"}, {"name": "subSuite", "value": "TestStarknet"}, {"name": "host", "value": "LAPTOP-UIN85NG6"}, {"name": "thread", "value": "13272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_contract.test_contract_starknet"}]}